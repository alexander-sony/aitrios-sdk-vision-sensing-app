// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
  "name": "Vision and Sensing Application SDK",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "..",
    "args": {
      // Update 'VARIANT' to pick a Python version: 3, 3.10, 3.9, 3.8, 3.7, 3.6
      // Append -bullseye or -buster to pin to an OS version.
      // Use -bullseye variants on local on arm64/Apple Silicon.
      "VARIANT": "3.8-bullseye"
    }
  },
  "runArgs": ["--init", "--shm-size=256m"],

  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "python.pythonPath": "/usr/local/bin/python",
        "python.languageServer": "Pylance",
        "python.defaultInterpreterPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
        "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
        "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
        "python.linting.flake8Path": "/usr/local/py-utils/bin/flake8",
        "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
        "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
        "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
        "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
        "python.formatting.provider": "black",
        "python.isort.args": ["--profile", "black"],
        "python.testing.unittestEnabled": false,
        "python.testing.pytestEnabled": true,
        "python.testing.pytestArgs": ["--cov", "--cov-branch"],
        "python.linting.flake8Args": [
          "--max-line-length",
          "99",
          "--ignore",
          "E203,W503"
        ],
        "workbench.editorAssociations": {
          "*.md": "vscode.markdown.preview.editor"
        },
        "jupyter.kernels.filter": [
          {
            "path": "/usr/bin/python3",
            "type": "pythonEnvironment"
          }
        ]
      },

      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-toolsai.jupyter",
        "ms-toolsai.jupyter-keymap",
        "ms-vscode.cpptools",
        "bierner.markdown-source,mermaid",
        "ms-vscode.cpptools"
      ]
    },

    // For git submodules: https://docs.github.com/ja/codespaces/managing-your-codespaces/managing-repository-access-for-your-codespaces
    "codespaces": {
      "repositories": {
        "SonySemiconductorSolutions/aitrios-sdk-console-access-lib-python": {
          "permissions": {
            "contents": "read"
          }
        },
        "SonySemiconductorSolutions/aitrios-sdk-zone-detection-webapp-cs": {
          "permissions": {
            "contents": "read"
          }
        }
      }
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [8080],
  "portsAttributes": {
    "8080": {
      "label": "CVAT Web UI",
      "onAutoForward": "silent"
    }
  },

  // Use 'initializeCommand' to run commands before the container is created.
  "initializeCommand": [".devcontainer/initializeCommand"],

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": ".devcontainer/postCreateCommand.sh",

  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root"

  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  }
}
